// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UgovorOZakupu.Data;

#nullable disable

namespace UgovorOZakupu.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UgovorOZakupu.Models.DokumentVO", b =>
                {
                    b.Property<int>("DokumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DokumentID"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumDonosenjaDokumenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sablon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZavodniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DokumentID");

                    b.ToTable("Dokumenta");

                    b.HasData(
                        new
                        {
                            DokumentID = 7,
                            Datum = new DateTime(2022, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumDonosenjaDokumenta = new DateTime(2009, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "neki sablonnnnnn",
                            ZavodniBroj = "123aA"
                        },
                        new
                        {
                            DokumentID = 5,
                            Datum = new DateTime(2009, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumDonosenjaDokumenta = new DateTime(2011, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sablon = "neki sablonnnnn",
                            ZavodniBroj = "123Aa"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Models.JavnoNadmetanjeVO", b =>
                {
                    b.Property<int>("JavnoNadmetanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JavnoNadmetanjeID"), 1L, 1);

                    b.Property<int>("BrojUcesnika")
                        .HasColumnType("int");

                    b.Property<int>("IzlicitiranaCena")
                        .HasColumnType("int");

                    b.Property<bool>("Izuzeto")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisinaDopuneDepozita")
                        .HasColumnType("int");

                    b.Property<string>("VremeKraja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JavnoNadmetanjeID");

                    b.ToTable("JavnaNadmetanja");

                    b.HasData(
                        new
                        {
                            JavnoNadmetanjeID = 6,
                            BrojUcesnika = 26,
                            IzlicitiranaCena = 150000,
                            Izuzeto = false,
                            Status = "neki status",
                            Tip = "neki tip",
                            VisinaDopuneDepozita = 1350,
                            VremeKraja = "13.35h"
                        },
                        new
                        {
                            JavnoNadmetanjeID = 66,
                            BrojUcesnika = 26,
                            IzlicitiranaCena = 150000,
                            Izuzeto = false,
                            Status = "neki status",
                            Tip = "neki tip",
                            VisinaDopuneDepozita = 1350,
                            VremeKraja = "13.35h"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Models.KupacVO", b =>
                {
                    b.Property<int>("KupacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KupacID"), 1L, 1);

                    b.Property<DateTime>("DatumPocetkaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPrestankaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuzinaTrajanjaZabraneUGodinama")
                        .HasColumnType("int");

                    b.Property<bool>("ImaZabranu")
                        .HasColumnType("bit");

                    b.Property<string>("Lice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OstvarenaPovrsina")
                        .HasColumnType("int");

                    b.Property<string>("Prioritet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacID");

                    b.ToTable("Kupci");

                    b.HasData(
                        new
                        {
                            KupacID = 6,
                            DatumPocetkaZabrane = new DateTime(2021, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPrestankaZabrane = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneUGodinama = 2,
                            ImaZabranu = true,
                            Lice = "nije ovlasceno",
                            OstvarenaPovrsina = 1505005,
                            Prioritet = "nema"
                        },
                        new
                        {
                            KupacID = 666,
                            DatumPocetkaZabrane = new DateTime(2014, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPrestankaZabrane = new DateTime(2026, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DuzinaTrajanjaZabraneUGodinama = 12,
                            ImaZabranu = true,
                            Lice = "nije ovlasceno",
                            OstvarenaPovrsina = 1505005,
                            Prioritet = "nema"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Models.LicnostVO", b =>
                {
                    b.Property<int>("LicnostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicnostID"), 1L, 1);

                    b.Property<string>("Funkcija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LicnostID");

                    b.ToTable("Licnosti");

                    b.HasData(
                        new
                        {
                            LicnostID = 6,
                            Funkcija = "ucesnik",
                            Ime = "Masa",
                            Prezime = "Bobar"
                        },
                        new
                        {
                            LicnostID = 65,
                            Funkcija = "ucesnik",
                            Ime = "Ema",
                            Prezime = "Kuzmanovic"
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Models.UgovorOZakupu", b =>
                {
                    b.Property<int>("UgovorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UgovorID"), 1L, 1);

                    b.Property<DateTime>("DatumPotpisa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MestoPotpisivanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ministar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odluka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RokZaVracanjeZemljista")
                        .HasColumnType("datetime2");

                    b.Property<int>("RokoviDospeca")
                        .HasColumnType("int");

                    b.Property<string>("TipGarancije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZavodniBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dokumentID")
                        .HasColumnType("int");

                    b.Property<int>("javnoNadmetanjeID")
                        .HasColumnType("int");

                    b.Property<int>("kupacID")
                        .HasColumnType("int");

                    b.Property<int>("licnostID")
                        .HasColumnType("int");

                    b.HasKey("UgovorID");

                    b.HasIndex("dokumentID");

                    b.HasIndex("javnoNadmetanjeID");

                    b.HasIndex("kupacID");

                    b.HasIndex("licnostID");

                    b.ToTable("Ugovori");

                    b.HasData(
                        new
                        {
                            UgovorID = 1,
                            DatumPotpisa = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavodjenja = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lice = "neko lice",
                            MestoPotpisivanja = "Beograd",
                            Ministar = "ekonomije",
                            Odluka = "nije donesena nikakva konacna odluka",
                            RokZaVracanjeZemljista = new DateTime(2026, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RokoviDospeca = 2,
                            TipGarancije = "godisnja",
                            ZavodniBroj = "123a",
                            dokumentID = 7,
                            javnoNadmetanjeID = 6,
                            kupacID = 666,
                            licnostID = 65
                        },
                        new
                        {
                            UgovorID = 2,
                            DatumPotpisa = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumZavodjenja = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Lice = "neko lice",
                            MestoPotpisivanja = "Beograd",
                            Ministar = "ekonomije",
                            Odluka = "nije donesena nikakva konacna odluka",
                            RokZaVracanjeZemljista = new DateTime(2026, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RokoviDospeca = 2,
                            TipGarancije = "godisnja",
                            ZavodniBroj = "123a",
                            dokumentID = 7,
                            javnoNadmetanjeID = 6,
                            kupacID = 666,
                            licnostID = 65
                        });
                });

            modelBuilder.Entity("UgovorOZakupu.Models.UgovorOZakupu", b =>
                {
                    b.HasOne("UgovorOZakupu.Models.DokumentVO", "dokument")
                        .WithMany()
                        .HasForeignKey("dokumentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UgovorOZakupu.Models.JavnoNadmetanjeVO", "javnoNadmetanje")
                        .WithMany()
                        .HasForeignKey("javnoNadmetanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UgovorOZakupu.Models.KupacVO", "kupac")
                        .WithMany()
                        .HasForeignKey("kupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UgovorOZakupu.Models.LicnostVO", "licnost")
                        .WithMany()
                        .HasForeignKey("licnostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dokument");

                    b.Navigation("javnoNadmetanje");

                    b.Navigation("kupac");

                    b.Navigation("licnost");
                });
#pragma warning restore 612, 618
        }
    }
}
