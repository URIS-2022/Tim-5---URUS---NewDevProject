// <auto-generated />
using System;
using Kupac__Mikroservis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kupac__Mikroservis.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kupac__Mikroservis.Models.AdresaVO", b =>
                {
                    b.Property<int>("AdresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresaID"), 1L, 1);

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdresaID");

                    b.ToTable("AdresaVOs");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.Kupac", b =>
                {
                    b.Property<int>("KupacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KupacID"), 1L, 1);

                    b.Property<DateTime>("DatumPocetkaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumPrestankaZabrane")
                        .HasColumnType("datetime2");

                    b.Property<int>("DuzinaTrajanjaZabraneUGodinama")
                        .HasColumnType("int");

                    b.Property<bool>("ImaZabranu")
                        .HasColumnType("bit");

                    b.Property<string>("Lice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OstvarenaPovrsina")
                        .HasColumnType("int");

                    b.Property<int>("OvlascenoLiceID")
                        .HasColumnType("int");

                    b.Property<string>("Prioritet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KupacID");

                    b.HasIndex("OvlascenoLiceID");

                    b.ToTable("Kupacs");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.OvlascenoLice", b =>
                {
                    b.Property<int>("OvlascenoLiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OvlascenoLiceID"), 1L, 1);

                    b.Property<int>("AdresaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojTabele")
                        .HasColumnType("int");

                    b.Property<string>("Drazava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG_BrojPasosa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OvlascenoLiceID");

                    b.HasIndex("AdresaID");

                    b.ToTable("OvlasceniLices");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.Uplata", b =>
                {
                    b.Property<int>("UplataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UplataID"), 1L, 1);

                    b.Property<string>("BrojRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<int>("KupacID")
                        .HasColumnType("int");

                    b.Property<string>("PozivNaBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SvrhaUplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uplatilac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UplataID");

                    b.HasIndex("KupacID");

                    b.ToTable("Uplatas");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.Kupac", b =>
                {
                    b.HasOne("Kupac__Mikroservis.Models.OvlascenoLice", "OvlascenoLice")
                        .WithMany()
                        .HasForeignKey("OvlascenoLiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OvlascenoLice");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.OvlascenoLice", b =>
                {
                    b.HasOne("Kupac__Mikroservis.Models.AdresaVO", "Adresa")
                        .WithMany()
                        .HasForeignKey("AdresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresa");
                });

            modelBuilder.Entity("Kupac__Mikroservis.Models.Uplata", b =>
                {
                    b.HasOne("Kupac__Mikroservis.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kupac");
                });
#pragma warning restore 612, 618
        }
    }
}
